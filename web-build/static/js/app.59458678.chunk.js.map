{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/CustomListitem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","error","alert","err","message","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","source","uri","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","containerStyle","button","onPress","title","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","RegisterScreen","name","setName","imageUrl","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","updateProfile","currentUser","displayName","photoURL","Text","h3","marginBottom","onSubmitEditing","raised","CustomListitem","id","chatName","enterChat","chatMessages","setChatMessages","docRef","doc","q","query","collection","orderBy","onSnapshot","snapshot","docs","map","data","bottomDivider","rounded","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","headerStyle","headerTitleStyle","color","headerTintColor","headerLeft","TouchableOpacity","activeOpacity","headerRight","flexDirection","AntDesign","size","SimpleLineIcons","SafeAreaView","ScrollView","AddChatScreen","input","setInput","createChat","addDoc","goBack","leftIcon","disabled","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitleAlign","headerTitle","marginLeft","params","FontAwesome","Ionicons","sendMessage","Keyboard","dismiss","timestamp","serverTimestamp","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","reciever","position","bottom","right","recieverText","sender","left","senderText","senderName","footer","TextInput","textInput","marginRight","borderRadius","alignSelf","maxWidth","margin","paddingRight","fontSize","Stack","createNativeStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","initialRouteName","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.59458678.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  updateProfile,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n  getDocs,\n  onSnapshot,\n  doc,\n  getDoc,\n  serverTimestamp,\n  orderBy,\n  query,\n} from \"firebase/firestore\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDtj8g_7IHyg1E-_5HRNQeWhAyiqxHkc1o\",\n  authDomain: \"signal-d494c.firebaseapp.com\",\n  projectId: \"signal-d494c\",\n  storageBucket: \"signal-d494c.appspot.com\",\n  messagingSenderId: \"323749966958\",\n  appId: \"1:323749966958:web:1c7d8a3524d12b312b627f\",\n  measurementId: \"G-H0F7NMDYHB\",\n};\n\nconst app = initializeApp(firebaseConfig);\n\nconst auth = getAuth(app);\n\nconst db = getFirestore(app);\n\nexport {\n  db,\n  auth,\n  serverTimestamp,\n  getDoc,\n  query,\n  doc,\n  collection,\n  addDoc,\n  getDocs,\n  onSnapshot,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  updateProfile,\n  orderBy,\n};\n","import { View, StyleSheet, KeyboardAvoidingView } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Input, Image } from \"@rneui/base\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  auth,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n} from \"../firebase\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (authUser) => {\n      if (authUser) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  const signIn = async () => {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      alert(err.message);\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n      <StatusBar style=\"light\" />\n      <Image\n        source={{\n          uri: \"https://img.onl/TpK2Sb\",\n        }}\n        style={{ width: 200, height: 200 }}\n      />\n      <View style={styles.inputContainer}>\n        <Input\n          placeholder=\"Email\"\n          autoFocus\n          type=\"email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        ></Input>\n        <Input\n          placeholder=\"Password\"\n          secureTextEntry\n          type=\"password\"\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        ></Input>\n      </View>\n      <Button\n        containerStyle={styles.button}\n        onPress={signIn}\n        title=\"Login\"\n      ></Button>\n      <Button\n        containerStyle={styles.button}\n        onPress={() => navigation.navigate(\"Register\")}\n        type=\"outline\"\n        title=\"Register\"\n      ></Button>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\",\n  },\n  inputContainer: {\n    width: 300,\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n  },\n});\n","import { View, Text, KeyboardAvoidingView, StyleSheet } from \"react-native\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { Button, Input } from \"@rneui/base\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  auth,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"../firebase\";\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerBackTitle: \"Login\",\n    });\n  }, [navigation]);\n\n  const register = async () => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n\n      updateProfile(auth.currentUser, {\n        displayName: name,\n        photoURL: imageUrl || \"https://img.onl/TpK2Sb\",\n      });\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n      <StatusBar style=\"light\" />\n      <Text h3 style={{ marginBottom: 50 }}>\n        Create a Signal account\n      </Text>\n      <View style={styles.inputContainer}>\n        <Input\n          placeholder=\"Full Name\"\n          autoFocus\n          type=\"text\"\n          value={name}\n          onChangeText={(text) => setName(text)}\n        ></Input>\n        <Input\n          placeholder=\"Email\"\n          type=\"email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        ></Input>\n        <Input\n          placeholder=\"Password\"\n          secureTextEntry\n          type=\"password\"\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        ></Input>\n        <Input\n          placeholder=\"Profile Picture URL (optional)\"\n          type=\"text\"\n          value={imageUrl}\n          onChangeText={(text) => setImageUrl(text)}\n          onSubmitEditing={register}\n        ></Input>\n      </View>\n      <Button\n        style={styles.button}\n        raised\n        onPress={register}\n        title=\"Register\"\n      ></Button>\n      <View style={{ height: 100 }}></View>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\",\n  },\n  inputContainer: {\n    width: 300,\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport { ListItem, Avatar } from \"@rneui/base\";\nimport { db, query, doc, onSnapshot, orderBy, collection } from \"../firebase\";\n\nconst CustomListitem = ({ id, chatName, enterChat }) => {\n  const [chatMessages, setChatMessages] = useState(\"\");\n\n  useEffect(() => {\n    const docRef = doc(db, \"chats\", id);\n\n    const q = query(\n      collection(docRef, \"messages\"),\n      orderBy(\"timestamp\", \"desc\")\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) =>\n      setChatMessages(snapshot.docs.map((doc) => doc.data()))\n    );\n\n    return unsubscribe;\n  });\n  return (\n    <ListItem onPress={() => enterChat(id, chatName)} key={id} bottomDivider>\n      <Avatar\n        rounded\n        source={{\n          uri: chatMessages?.[0]?.photoURL || \"https://img.onl/TpK2Sb\",\n        }}\n      ></Avatar>\n      <ListItem.Content>\n        <ListItem.Title style={{ fontWeight: \"800\" }}>\n          {chatName}\n        </ListItem.Title>\n        <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\n          {chatMessages?.[0]?.displayName} : {chatMessages?.[0]?.message}\n        </ListItem.Subtitle>\n      </ListItem.Content>\n    </ListItem>\n  );\n};\n\nexport default CustomListitem;\n","import {\n  View,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport CustomListitem from \"../components/CustomListitem\";\nimport { Avatar } from \"@rneui/base\";\nimport { auth, db, collection, onSnapshot } from \"../firebase\";\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\n\nconst HomeScreen = ({ navigation }) => {\n  const [chats, setChats] = useState([]);\n\n  const signOutUser = async () => {\n    try {\n      await auth.signOut();\n      navigation.replace(\"Login\");\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(db, \"chats\"), (snapshot) =>\n      setChats(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      )\n    );\n\n    return unsubscribe;\n  });\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Signal\",\n      headerStyle: {\n        backgroundColor: \"#fff\",\n      },\n      headerTitleStyle: {\n        color: \"black\",\n      },\n      headerTintColor: \"black\",\n      headerLeft: () => (\n        <View>\n          <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\n            <Avatar\n              rounded\n              source={{\n                uri: auth?.currentUser?.photoURL || \"https://img.onl/TpK2Sb\",\n              }}\n            ></Avatar>\n          </TouchableOpacity>\n        </View>\n      ),\n      headerRight: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n          }}\n        >\n          <TouchableOpacity onPress={() => {}} activeOpacity={0.5}>\n            <AntDesign name=\"camerao\" size={24} color=\"black\"></AntDesign>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"AddChat\")}\n            activeOpacity={0.5}\n          >\n            <SimpleLineIcons\n              name=\"pencil\"\n              size={24}\n              color=\"black\"\n            ></SimpleLineIcons>\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation]);\n\n  const enterChat = (id, chatName) => {\n    navigation.navigate(\"Chat\", {\n      id,\n      chatName,\n    });\n  };\n  return (\n    <SafeAreaView>\n      <ScrollView style={styles.container}>\n        {chats.map(({ id, data: { chatName } }) => (\n          <CustomListitem\n            id={id}\n            chatName={chatName}\n            key={id}\n            enterChat={enterChat}\n          ></CustomListitem>\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n  },\n});\n","import { View, StyleSheet } from \"react-native\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { Button, Input, Icon } from \"@rneui/base\";\nimport { db, collection, addDoc } from \"../firebase\";\n\nconst AddChatScreen = ({ navigation }) => {\n  const [input, setInput] = useState(\"\");\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Add a new Chat\",\n      headerBackTitle: \"Chats\",\n    });\n  }, []);\n\n  const createChat = async () => {\n    try {\n      await addDoc(collection(db, \"chats\"), {\n        chatName: input,\n      });\n\n      navigation.goBack();\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  return (\n    <View style={styles.container}>\n      <Input\n        placeholder=\"Enter a chat name\"\n        value={input}\n        onChangeText={(text) => setInput(text)}\n        onSubmitEditing={createChat}\n        leftIcon={\n          <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\"></Icon>\n        }\n      ></Input>\n      <Button\n        disabled={!input}\n        onPress={createChat}\n        title=\"Create new Chat\"\n      ></Button>\n    </View>\n  );\n};\n\nexport default AddChatScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\",\n  },\n});\n","import {\n  View,\n  Text,\n  TouchableOpacity,\n  Platform,\n  KeyboardAvoidingView,\n  StyleSheet,\n  ScrollView,\n  SafeAreaView,\n  TextInput,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport React, { useState, useLayoutEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Avatar } from \"@rneui/base\";\nimport { AntDesign, FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport {\n  db,\n  collection,\n  doc,\n  addDoc,\n  auth,\n  serverTimestamp,\n  query,\n  orderBy,\n  onSnapshot,\n} from \"../firebase\";\n\nconst ChatScreen = ({ navigation, route }) => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerBackTitleVisible: false,\n      headerTitleAlign: \"left\",\n      headerTitle: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar rounded source={{ uri: messages[0]?.data.photoURL }}></Avatar>\n          <Text style={{ color: \"white\", fontWeight: \"700\", marginLeft: 10 }}>\n            {route.params.chatName}\n          </Text>\n        </View>\n      ),\n      headerLeft: () => (\n        <TouchableOpacity onPress={navigation.goBack}>\n          <AntDesign name=\"arrowleft\" size={24} color=\"white\"></AntDesign>\n        </TouchableOpacity>\n      ),\n      headerRight: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n          }}\n        >\n          <TouchableOpacity onPress={navigation.goBack}>\n            <FontAwesome\n              name=\"video-camera\"\n              size={24}\n              color=\"white\"\n            ></FontAwesome>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={navigation.goBack}>\n            <Ionicons name=\"call\" size={24} color=\"white\"></Ionicons>\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, messages]);\n  const sendMessage = async () => {\n    try {\n      Keyboard.dismiss();\n      const docRef = doc(db, \"chats\", route.params.id);\n\n      await addDoc(collection(docRef, \"messages\"), {\n        timestamp: serverTimestamp(),\n        message: input,\n        displayName: auth.currentUser.displayName,\n        email: auth.currentUser.email,\n        photoURL: auth.currentUser.photoURL,\n      });\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  useLayoutEffect(() => {\n    const docRef = doc(db, \"chats\", route.params.id);\n\n    const q = query(\n      collection(docRef, \"messages\"),\n      orderBy(\"timestamp\", \"desc\")\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) =>\n      setMessages(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      )\n    );\n\n    return unsubscribe;\n  }, [route]);\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"white\" }}>\n      <StatusBar style=\"light\"></StatusBar>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n        keyboardVerticalOffset={90}\n      >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <>\n            <ScrollView contentContainerStyle={{ paddingTop: 15 }}>\n              {messages.map(({ id, data }) =>\n                data.email === auth.currentUser.email ? (\n                  <View key={id} style={styles.reciever}>\n                    <Avatar\n                      position=\"absolute\"\n                      bottom={-15}\n                      right={-5}\n                      rounded\n                      size={30}\n                      source={{\n                        uri: data.photoURL,\n                      }}\n                    ></Avatar>\n                    <Text style={styles.recieverText}>{data.message}</Text>\n                  </View>\n                ) : (\n                  <View key={id} style={styles.sender}>\n                    <Avatar\n                      position=\"absolute\"\n                      bottom={-15}\n                      left={-5}\n                      rounded\n                      size={30}\n                      source={{\n                        uri: data.photoURL,\n                      }}\n                    ></Avatar>\n                    <Text style={styles.senderText}>{data.message}</Text>\n                    <Text style={styles.senderName}>{data.displayName}</Text>\n                  </View>\n                )\n              )}\n            </ScrollView>\n            <View style={styles.footer}>\n              <TextInput\n                value={input}\n                onChangeText={(text) => setInput(text)}\n                onSubmitEditing={sendMessage}\n                placeholder=\"Signal Message\"\n                style={styles.textInput}\n              ></TextInput>\n              <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\n                <Ionicons name=\"send\" size={24} color=\"#2B68E6\"></Ionicons>\n              </TouchableOpacity>\n            </View>\n          </>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15,\n  },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"grey\",\n    borderRadius: \"30\",\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: \"flex-end\",\n    borderRadius: 20,\n    marginRight: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  sender: {\n    padding: 15,\n    backgroundColor: \"#2B68E6\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    margin: 15,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"white\",\n  },\n  recieverText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n  },\n  senderText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15,\n  },\n});\n","import { StyleSheet } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddChatScreen from \"./screens/AddChatScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nconst Stack = createNativeStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: { backgroundColor: \"#2C6BED\" },\n  headerTitleStyle: { color: \"white\" },\n  headerTintColor: \"white\",\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        initialRouteName=\"Home\"\n        screenOptions={globalScreenOptions}\n      >\n        <Stack.Screen name=\"Login\" component={LoginScreen}></Stack.Screen>\n        <Stack.Screen name=\"Register\" component={RegisterScreen}></Stack.Screen>\n        <Stack.Screen name=\"Home\" component={HomeScreen}></Stack.Screen>\n        <Stack.Screen name=\"AddChat\" component={AddChatScreen}></Stack.Screen>\n        <Stack.Screen name=\"Chat\" component={ChatScreen}></Stack.Screen>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"sourceRoot":""}